package info.kwarc.mmt.api

/** describes the origin of a generated knowledge item */
abstract class Origin {
  val transient: Boolean = false
}
/** an original declaration */
case object Original extends Origin
/** obtained by elaborating a declaration */
case class ElaborationOf(source: ContentPath) extends Origin
/** obtained by elaborating the definition of a module*/
case object ElaborationOfDefinition extends Origin

/**
  * A knowledge item generated (or translated) by some agent [[by]]
  * from some [[source]] knowledge item.
  *
  * @example Every linear diagram operator translates a single constant c
  *          to a list of declarations d_1, ..., d_n each of whose origin
  *          is ''GeneratedFrom(c.path, diagram operator Scala object)''.
  * @example Other examples stem from (simplification) rules generators.
  */
case class GeneratedFrom(source: ContentPath, by: AnyRef) extends Origin

/**
  * A knowledge item generated by some agent [[by]] from some external source
  * (e.g., from the sources of another theorem prover like IMPS or Coq).
  *
  * For MMT-internal sources, use [[GeneratedFrom]].
  */
case class GeneratedBy(by: AnyRef) extends Origin

/** materialized module */
case class Materialized(from: objects.Term) extends Origin
trait TransientOrigin extends Origin {
  override val transient = true
}
/** transient, created during lookup */
case object CreatedForLookup extends TransientOrigin

/** MRef left when taking a theory out of a document */
case object GeneratedMRef extends Origin

/** generated by lookup in partial links */
case object DefaultAssignment extends Origin
